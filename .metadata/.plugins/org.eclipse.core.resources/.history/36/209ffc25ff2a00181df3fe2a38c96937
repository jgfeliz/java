package graficos;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;

public class FocoEvento {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		MarcoFoco focoventana=new MarcoFoco();
		focoventana.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		focoventana.setVisible(true);
	}

}


class MarcoFoco extends JFrame{
	
	public MarcoFoco(){//creo el metodo constructor del marco para darle un estado inicial
		
		setBounds(400,400,600,400);//le doy unas dimenciones y una poscicion de origen
		setTitle("Titulos del marco...");//le doy un titulo al marco
		Toolkit icono4=Toolkit.getDefaultToolkit();//creo un objeto de tipo toolkit con la intencion de almacenar en el una imagen
		Image logo4=icono4.getImage("imagenes/icono.png");
		setIconImage(logo4);
		add(new LaminaFoco());//instanciacion dentro de argumento necesario
		
	}
}

class LaminaFoco extends JPanel{
	
	public void paintComponent(Graphics g){
		
		super.paintComponent(g);
		
		setLayout(null);//desabilitamod el layou, con esto conseguimos 
		//colocar los elementos en la lamina donde nosotros queramos y no donde java lo defina
		//o sea que deshabilitamos el layout
		
		cuadro1=new JTextField();
		cuadro2=new JTextField();
		
		cuadro1.setBounds(120,10,150,20);
		cuadro2.setBounds(120,50,150,20);
		
		add(cuadro1);
		add(cuadro2);
	}
	
	JTextField cuadro1;//estas variable las declaro fuera del metodo paintcomponent para que el alcance no sea local y poder aceder a ella desde fuera del metodo
	JTextField cuadro2;//estas variable las declaro fuera del metodo paintcomponent para que el alcance no sea local y poder aceder a ella desde fuera del metodo
}